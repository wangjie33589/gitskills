//
//  Home_Function_ViewController.m
//  Proxy_ios
//
//  Created by E-Bans on 15/11/13.
//  Copyright © 2015年 keyuan. All rights reserved.
//

#import "Home_Function_ViewController.h"
#import "FunctionModel.h"
#import "UIImageView+WebCache.h"
#import "LeftViewController.h"
#import "BookViewController.h"
#import "BYMainController.h"
#import "RunLogViewController.h"
#import "WorkLogViewController.h"
#import "NoticeViewController.h"
#import "BaseViewController.h"
#import "HotNewsViewController.h"
#import "AllQueryViewController.h"

@interface Home_Function_ViewController () <MyRequestDelegate,LeftViewControllerRefreshDelegate>
{
    UIView* popView;
    NSMutableArray* showArray;
    UIView* buttonView;
    BOOL isRefresh;
}
@end

@implementation Home_Function_ViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    UIBarButtonItem * lefyButton = [[UIBarButtonItem alloc]
                                    initWithTitle:@""
                                    style:UIBarButtonItemStyleDone
                                    target:self
                                    action:@selector(callModalList)];
    
    [lefyButton setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:
                                        [UIFont systemFontOfSize:15], NSFontAttributeName,
                                        [UIColor whiteColor], NSForegroundColorAttributeName,
                                        nil]
                              forState:UIControlStateNormal];
    lefyButton.image = [UIImage imageNamed:@"leftImag"];
    self.navigationItem.leftBarButtonItem = lefyButton;
    
    self.title = @"常用功能";
    isRefresh = NO;
    [SVProgressHUD showWithStatus:@"努力加载中..."];
    //给背景view加点击事件，用于终止选中动画
    UITapGestureRecognizer * tapView = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(tapView)];
    [self.view addGestureRecognizer:tapView];
    [self requestShowDataFunction];
}
- (void)callModalList
{
    AppDelegate *aAppDelegate=(AppDelegate *)[[UIApplication sharedApplication] delegate];
    [aAppDelegate.ddMenu showLeftController:YES];
}
- (void)requestShowDataFunction
{
    isRefresh = NO;
    [popView removeFromSuperview];
    [showArray removeAllObjects];
    showArray = [[NSMutableArray alloc] init];
    NSDictionary* dict = [NSDictionary dictionaryWithObjectsAndKeys:@"GETSHORTCUT",@"Action",USERGUID,@"USERGUID", nil];
    MyRequest *manager = [MyRequest requestWithURL:[NSString stringWithFormat:@"http://%@/slrd/ProxyMobile/MobileFrame.ashx",HTTPIP] withParameter:dict];
    manager.delegate = self;
    manager.backSuccess = ^void(NSDictionary *dictt)
    {
        if ([[dictt objectForKey:@"success"] integerValue] == 1) {
            [SVProgressHUD dismiss];
            showArray = [NSMutableArray arrayWithArray:[[dictt objectForKey:@"Data"] objectForKey:@"R"]];
            [self.view.subviews makeObjectsPerformSelector:@selector(removeFromSuperview)];
            [self initView];
        }else{
            [SVProgressHUD showErrorWithStatus:[dictt objectForKey:@"errorMsg"]];
        }
    };
}
#pragma mark ------------------------- 网络环境不可用时的页面
- (void)RequestErrorViewController
{
    [SVProgressHUD dismiss];
    popView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, LWidth, LHeight)];
    popView.backgroundColor = [UIColor colorWithRed:0.949 green:0.949 blue:0.949 alpha:1];
    UIImageView* imag = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 150, 160)];
    imag.center = popView.center;
    imag.image = [UIImage imageNamed:@"02e9868d724dae529e06525edbaf024e.png"];
    [popView addSubview:imag];
    [self.view addSubview:popView];
    UITapGestureRecognizer* regiontapGestureT = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(requestShowDataFunction)];
    [popView addGestureRecognizer:regiontapGestureT];
}
- (void)functionMenuClick:(UIButton *)sender
{
    
    
    
    if ([showArray[sender.tag] objectForKey:@"MURL3"]==nil||[[showArray[sender.tag] objectForKey:@"MURL3"] isEqual:[NSNull null]]||[[showArray[sender.tag] objectForKey:@"MURL3"] isEqualToString:@""]) {
        [SVProgressHUD showErrorWithStatus:@"出错了，此功能没有配置"];
    }else{
        if ([[showArray[sender.tag] objectForKey:@"MURL3"] isEqualToString:@"oa.ContactsActivity"]) {
            UIStoryboard *story = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
            BookViewController* bookVC = [story instantiateViewControllerWithIdentifier:@"BookViewController"];
            bookVC.title_Str = sender.titleLabel.text;
            bookVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:bookVC animated:YES];
        }else if ([[showArray[sender.tag] objectForKey:@"MURL3"] isEqualToString:@"oa.NewsCenterActivity"]) {
            BYMainController* newsVC = [BYMainController new];
            newsVC.title_Str = sender.titleLabel.text;
            newsVC.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:newsVC animated:YES];
        }else if ([[showArray[sender.tag] objectForKey:@"MURL3"] isEqualToString:@"dm.DutyLogListActivity"]) {
            RunLogViewController* runVC = [RunLogViewController new];
            runVC.hidesBottomBarWhenPushed = YES;
            runVC.title_Str = sender.titleLabel.text;
            [self.navigationController pushViewController:runVC animated:YES];
        }else if ([[showArray[sender.tag] objectForKey:@"MURL3"] isEqualToString:@"dm.WorkLog_NoteListActivity"]) {
            WorkLogViewController* workVC = [WorkLogViewController new];
            workVC.hidesBottomBarWhenPushed = YES;
            workVC.title_Str = sender.titleLabel.text;
            [self.navigationController pushViewController:workVC animated:YES];
        }else if ([[showArray[sender.tag] objectForKey:@"MURL3"] isEqualToString:@"oa.AnnocActivity"]) {
            NoticeViewController* noticeVC = [NoticeViewController new];
            noticeVC.hidesBottomBarWhenPushed = YES;
            noticeVC.title_str = sender.titleLabel.text;
            [self.navigationController pushViewController:noticeVC animated:YES];
        }else if ([[showArray[sender.tag] objectForKey:@"MURL3"] isEqualToString:@"eam.EAM_DefectListActivity"]) {
            BaseViewController* baseVC = [BaseViewController new];
            baseVC.hidesBottomBarWhenPushed = YES;
            baseVC.title_str = sender.titleLabel.text;
            [self.navigationController pushViewController:baseVC animated:YES];
        }else if ([[[showArray[sender.tag] objectForKey:@"MURL3"] substringToIndex:7] isEqualToString:@"http://"]) {
            NSString *url=[showArray[sender.tag]objectForKey:@"MURL3"] ;
            NSString *NEWurl= [url stringByReplacingOccurrencesOfString:FLAG withString:HTTPIP];
//            NSLog(@"%@",NEWtitle);
            
            if ([url rangeOfString:FLAG].location!=NSNotFound ) {
                HotNewsViewController* hotVC = [[HotNewsViewController alloc] initWithUrl:NEWurl  title:sender.titleLabel.text];
                hotVC.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:hotVC animated:YES];
                
            }
            
           
        }else if ([[[showArray[sender.tag] objectForKey:@"MURL3"] substringToIndex:23] isEqualToString:@"query.QueryListActivity"]) {
            AllQueryViewController* vc = [[AllQueryViewController alloc] initWithUrl:[showArray[sender.tag] objectForKey:@"MURL3"] title:sender.titleLabel.text];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
    }
}
- (void)deleteMenuClick:(UIButton *)sender;
{
    [self tapView];
    [SVProgressHUD showWithStatus:@"删除中..."];
    NSDictionary* dict = [NSDictionary dictionaryWithObjectsAndKeys:@"DELSHORTCUT",@"Action",[[showArray objectAtIndex:sender.tag] objectForKey:@"GUID"],@"GUID", nil];
    MyRequest *manager = [MyRequest requestWithURL:[NSString stringWithFormat:@"http://%@/slrd/ProxyMobile/MobileFrame.ashx",HTTPIP] withParameter:dict];
    manager.delegate = self;
    manager.backSuccess = ^void(NSDictionary *dictt)
    {
        if ([[dictt objectForKey:@"success"] integerValue] == 1) {
            [SVProgressHUD showSuccessWithStatus:@"移除成功"];
            [SVProgressHUD showWithStatus:@"请稍后..."];
            [self requestShowDataFunction];
        }else{
            [SVProgressHUD showErrorWithStatus:[dictt objectForKey:@"errorMsg"]];
        }
    };
}
- (void)refreshDataViewController
{
    isRefresh = YES;
    [self.view setNeedsLayout];
}
- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:YES];
    if (isRefresh) {
        [self requestShowDataFunction];
    }
}

//长按手势的回调
-(void)longPressTap:(UILongPressGestureRecognizer  *)recognizer//开始抖动
{
    [self.view bringSubviewToFront:buttonView];
    buttonView.userInteractionEnabled = YES;
    if (recognizer.state == UIGestureRecognizerStateBegan) {
        for (UIButton * btn in buttonView.subviews) {
            btn.hidden = NO;
        }
        NSLog(@"begin");
        int i = 0;//获取数组中得view位置
        for (UIView * view in self.view.subviews) {
            if (view.tag != 1000) {
                i = i + 1;
                //角度偏移矩阵
                CGAffineTransform t1 = CGAffineTransformMakeRotation(0.02);
                CGAffineTransform t2 = CGAffineTransformMakeRotation(-0.02);
                
                if (i%2 == 1){
                    view.transform = t1;
                }else{
                    view.transform = t2;
                }
                
                [UIView animateWithDuration:0.1 delay:0.0 options:UIViewAnimationOptionAutoreverse|UIViewAnimationOptionRepeat animations:^{
                    //[UIView setAnimationRepeatCount:12.0];
                    if (i%2 == 1) {
                        view.transform = t2;
                    } else {
                        view.transform = t1;
                    }
                } completion:^(BOOL finished){
                    [UIView animateWithDuration:0.2 delay:0.0 options:UIViewAnimationOptionCurveEaseInOut animations:^{
                         CGAffineTransform t = CGAffineTransformMakeScale(1,1);
                         for (UIView * view in self.view.subviews) {
                             view.transform = t;
                         }
                     } completion:^(BOOL finished){
                         NSLog(@"完成");
                     }];
                }];
            }
        }
    }else if (recognizer.state == UIGestureRecognizerStateChanged) {
        NSLog(@"changed");
    } else if(recognizer.state == UIGestureRecognizerStateEnded) {
        NSLog(@"end");
    }
}
- (void)tapView//停止抖动
{
    [UIView animateWithDuration:0.2 delay:0.0 options:UIViewAnimationOptionCurveEaseInOut animations:^{
         CGAffineTransform t = CGAffineTransformMakeScale(1,1);
         for (UIView * view in self.view.subviews) {
             view.transform = t;
         }
     } completion:^(BOOL finished){
         NSLog(@"完成");
         buttonView.userInteractionEnabled = NO;
     }];
    for (id view in buttonView.subviews) {
        if ([view isKindOfClass:[UIButton class]]) {
            UIButton* btn = (UIButton *)view;
            btn.hidden = YES;
        }
    }
}

- (void)initView
{
    buttonView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, LWidth, LHeight)];
    buttonView.backgroundColor = [UIColor clearColor];
    buttonView.tag = 1000;
    buttonView.userInteractionEnabled = NO;
    [self.view addSubview:buttonView];
    
    for (NSInteger index = 0; index < showArray.count; index ++) {
        NSInteger X = index%3*(LWidth/3);
        NSInteger Y = index/3*(LWidth/3);
        UIButton* btn = [UIButton buttonWithType:UIButtonTypeCustom];
        btn.tag = index;
        btn.frame = CGRectMake(X, Y, LWidth/3, LWidth/3);
        [btn setTitle:[showArray[index] objectForKey:@"MNAME"] forState:0];
        [btn setTitleColor:[UIColor clearColor] forState:0];
        [btn addTarget:self action:@selector(functionMenuClick:) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:btn];
        UILongPressGestureRecognizer * longPress = [[UILongPressGestureRecognizer alloc]initWithTarget:self action:@selector(longPressTap:)];
        [btn addGestureRecognizer:longPress];
        
        UIImageView* imagView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 60, 60)];
        [imagView sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"http://%@/slrd/MobileImages/%@",HTTPIP,[[showArray[index] objectForKey:@"GIFNAME"] stringByAddingPercentEncodingWithAllowedCharacters:[NSCharacterSet URLQueryAllowedCharacterSet]]]] placeholderImage:[UIImage imageNamed:@"index1"]];
        CGPoint point = btn.center;
        point.y = point.y-10;
        imagView.center = point;
        [self.view addSubview:imagView];
        
        UILabel* label = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, LWidth/3, 20)];
        label.text = [showArray[index] objectForKey:@"MNAME"];
        label.textColor = [UIColor blackColor];
        label.textAlignment = NSTextAlignmentCenter;
        label.font = [UIFont systemFontOfSize:15];
        CGPoint pointl = btn.center;
        pointl.y = pointl.y+38;
        label.center = pointl;
        [buttonView addSubview:label];
        
        UIButton* btnDelete = [UIButton buttonWithType:UIButtonTypeCustom];
        btnDelete.tag = index;
        btnDelete.hidden = YES;
        btnDelete.frame = CGRectMake(imagView.frame.origin.x+60-13, imagView.frame.origin.y-7, 20, 20);
        [btnDelete setBackgroundImage:[UIImage imageNamed:@"content_title_icon_close"] forState:0];
        if ([[showArray[index] objectForKey:@"MGUID"] isEqualToString:@"1"]) {
            [btnDelete setBackgroundImage:[UIImage imageNamed:@""] forState:0];
            btnDelete.userInteractionEnabled = NO;
        }
        [btnDelete addTarget:self action:@selector(deleteMenuClick:) forControlEvents:UIControlEventTouchUpInside];
        [buttonView addSubview:btnDelete];
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
@end
