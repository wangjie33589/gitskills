//
//  RunLogViewController.m
//  Proxy_ios
//
//  Created by 刘康.Mac on 15/11/22.
//  Copyright © 2015年 keyuan. All rights reserved.
//

#import "RunLogViewController.h"
#import "WorkModel.h"
#import "WorkContensTableViewCell.h"
#import "MJRefresh.h"

@interface RunLogViewController () <UITableViewDataSource,UITableViewDelegate>
{
    NSMutableArray* showArray;
//    NSMutableArray* dataArray;
    NSMutableArray* dataEndArray;
    UITableView* contensTableView;
    UITableView* listTableView;
    UITableView* valueTableView;
    UIButton* listButton;
    UIButton* valueButton;
    NSArray* valueArray;
    NSString* guidStr;
    BOOL isList;
    BOOL isValue;
    NSInteger startIndex;
    NSMutableArray* andMutableArray;
}
@end

@implementation RunLogViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    startIndex = 1;
    self.title = _title_Str;
    [self initTableView];
    [self initdropDownMenu];
    [SVProgressHUD showWithStatus:@"努力加载中..."];
    self.view.backgroundColor = [UIColor colorWithRed:0.87 green:0.87 blue:0.87 alpha:1];
    isList = YES;
    isValue = YES;
    listButton = [UIButton buttonWithType:UIButtonTypeCustom];
    listButton.tag = 0;
    listButton.backgroundColor = [UIColor whiteColor];
    listButton.frame = CGRectMake(10, 10, (LWidth-30)/2, 40);
    [listButton setTitle:@"值长" forState:0];
    [listButton setTitleColor:[UIColor blackColor] forState:0];
    listButton.layer.borderColor = [[UIColor colorWithRed:0.773 green:0.780 blue:0.776 alpha:1] CGColor];
    listButton.layer.borderWidth = .5f;
    listButton.titleLabel.font = [UIFont systemFontOfSize:14];
    [listButton addTarget:self action:@selector(listButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:listButton];
    [self requestShowDataNews];
    
    valueButton = [UIButton buttonWithType:UIButtonTypeCustom];
    valueButton.tag = 1;
    valueButton.backgroundColor = [UIColor whiteColor];
     valueButton.frame = CGRectMake((LWidth-30)/2 +20,10, (LWidth-30)/2, 40);
    [valueButton setTitle:@"近三天" forState:0];
    [valueButton setTitleColor:[UIColor blackColor] forState:0];
    valueButton.layer.borderColor = [[UIColor colorWithRed:0.773 green:0.780 blue:0.776 alpha:1] CGColor];
    valueButton.layer.borderWidth = .5f;
    valueButton.titleLabel.font = [UIFont systemFontOfSize:14];
    [valueButton addTarget:self action:@selector(listButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:valueButton];
    
    UIButton * reset = [UIButton buttonWithType:UIButtonTypeCustom];
    reset.frame = CGRectMake(10, listButton.frame.origin.y+listButton.frame.size.height+10, (LWidth-30)/2, 35);
    reset.tag = 3;
    reset.backgroundColor = [UIColor colorWithRed:19/255.0 green:153/255.0 blue:251/255.0 alpha:1];
    reset.layer.masksToBounds = YES;
    reset.layer.cornerRadius = 5;
    reset.titleLabel.font = [UIFont systemFontOfSize:16];
    [reset setTitle:@"重置" forState:0];
    [reset setTitleColor:[UIColor whiteColor] forState:0];
    [reset addTarget:self action:@selector(listButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:reset];
    
    UIButton* searchButton = [UIButton buttonWithType:UIButtonTypeCustom];
    searchButton.tag = 2;
    searchButton.backgroundColor = [UIColor colorWithRed:0.01 green:0.66 blue:1 alpha:1];
    searchButton.frame = CGRectMake(valueButton.frame.size.width+valueButton.frame.origin.x+10, 10, LWidth-(valueButton.frame.size.width+valueButton.frame.origin.x)-20, 35);
    searchButton.frame = CGRectMake((LWidth-30)/2+20, listButton.frame.origin.y+listButton.frame.size.height+10, (LWidth-30)/2, 35);
    
    [searchButton setTitle:@"搜索" forState:0];
    [searchButton setTitleColor:[UIColor whiteColor] forState:0];
    searchButton.layer.masksToBounds = YES;
    searchButton.layer.cornerRadius = 3;
    searchButton.titleLabel.font = [UIFont systemFontOfSize:14];
    [searchButton addTarget:self action:@selector(listButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:searchButton];

    
    valueArray = @[@"近三天",@"近五天",@"近十天",@"近二十天",@"近一个月"];
    
    [self initdropDownMenuValue];
    [self requestShowDataNews];
}
//-(void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event{
//    NSLog(@"sddd");
//
//    listTableView.hidden = YES;
//    valueTableView.hidden = YES;
//  [listButton setBackgroundColor:[UIColor whiteColor]];
//    [valueButton setBackgroundColor:[UIColor whiteColor]];
//
//
//
//
//}
- (void)listButtonClick:(UIButton *)sender
{
    [self.view bringSubviewToFront:listTableView];
    [self.view bringSubviewToFront:valueTableView];
    switch (sender.tag) {
        case 0:
        {
            if (isList) {
                listTableView.hidden = NO;
                [listButton setTitle:@"取消" forState:0];
                [listButton setBackgroundColor:[UIColor orangeColor]];
                [listButton setTitleColor:[UIColor whiteColor] forState:0];
            }else{
               [listButton setTitle:@"值长" forState:0];
                listTableView.hidden = YES;
                [listButton setBackgroundColor:[UIColor whiteColor]];
                [listButton setTitleColor:[UIColor blackColor] forState:0];
                [self searchData];
            }
            isList = !isList;
        }
            break;
        case 1:
        {
            if (isValue) {
                [valueButton setTitle:@"取消" forState:0];
                valueTableView.hidden = NO;
                [valueButton setBackgroundColor:[UIColor orangeColor]];
                [valueButton setTitleColor:[UIColor whiteColor] forState:0];
            }else{
                [valueButton setTitle:@"近三天" forState:0];
                valueTableView.hidden = YES;
                [valueButton setBackgroundColor:[UIColor whiteColor]];
                [valueButton setTitleColor:[UIColor blackColor] forState:0];
            }
            isValue = !isValue;
        }
            break;
        case 2:
        {
            [SVProgressHUD showWithStatus:@"请稍后..."];
            [self searchData];
        }
            break;
        case 3:{
            if (isList) {
                
                [listButton setTitle:@"值长" forState:0];
                [valueButton setTitle:@"近三天" forState:0];
                
                [listButton setBackgroundColor:[UIColor whiteColor]];
                [listButton setTitleColor:[UIColor blackColor] forState:0];
                [self searchData];
            }
            

        
        
        }break;
    }
}
- (void)initdropDownMenu;
{
    listTableView = [[UITableView alloc] initWithFrame:CGRectMake(10, 40, LWidth/3+20, LHeight-150)];
    listTableView.hidden = YES;
    listTableView.delegate = self;
    listTableView.dataSource = self;
    listTableView.rowHeight = 30;
    listTableView.tag = 0;
    listTableView.backgroundColor = [UIColor whiteColor];
    listTableView.layer.borderColor = [[UIColor colorWithRed:0.773 green:0.780 blue:0.776 alpha:1] CGColor];
    listTableView.layer.borderWidth = .5f;
    listTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [listTableView setTableFooterView:[[UIView alloc] initWithFrame:CGRectZero]];
    [self.view addSubview:listTableView];
}
- (void)initdropDownMenuValue;
{
    valueTableView = [[UITableView alloc] initWithFrame:CGRectMake(LWidth/3-65+(LWidth/3-20), 40, LWidth/3-20, 150)];
    valueTableView.hidden = YES;
    valueTableView.delegate = self;
    valueTableView.dataSource = self;
    valueTableView.rowHeight = 30;
    valueTableView.tag = 1;
    valueTableView.backgroundColor = [UIColor whiteColor];
    valueTableView.layer.borderColor = [[UIColor colorWithRed:0.773 green:0.780 blue:0.776 alpha:1] CGColor];
    valueTableView.layer.borderWidth = .5f;
    valueTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [valueTableView setTableFooterView:[[UIView alloc] initWithFrame:CGRectZero]];
    [self.view addSubview:valueTableView];
}
- (void)initTableView
{
 contensTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 93, LWidth, LHeight-116-43)];
    contensTableView.delegate = self;
    contensTableView.dataSource = self;
    contensTableView.tag = 2;
    contensTableView.sectionHeaderHeight =30;
    contensTableView.backgroundColor = [UIColor whiteColor];
    contensTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [contensTableView setTableFooterView:[[UIView alloc] initWithFrame:CGRectZero]];
    [contensTableView addHeaderWithTarget:self action:@selector(upRefresh:)];
    [contensTableView addFooterWithTarget:self action:@selector(downRefresh:)];
    [self.view addSubview:contensTableView];
}
- (void)requestShowDataNews
{
    [SVProgressHUD showWithStatus:@"努力加载中..."];
    NSDictionary* dict = [NSDictionary dictionaryWithObjectsAndKeys:@"GETBOOK",@"Action", nil];
    MyRequest *manager = [MyRequest requestWithURL:[NSString stringWithFormat:@"http://%@/slrd/DM/ProxyMobile/BaseDataProxy.ashx",HTTPIP] withParameter:dict];
    manager.backSuccess = ^void(NSDictionary *dictt)
    {
        [showArray removeAllObjects];
        showArray = [[NSMutableArray alloc] init];
        if ([[dictt objectForKey:@"success"] integerValue] == 1) {
            [showArray addObject:@{@"MPNAME":@"全部"}];
            for (NSDictionary* Data in [[dictt objectForKey:@"Data"] objectForKey:@"R"]) {
                [showArray addObject:Data];
            }
            [listTableView reloadData];
            [self searchData];
        }else{
            [SVProgressHUD showErrorWithStatus:[dictt objectForKey:@"errorMsg"]];
        }
    };
}
- (void)searchData
{
    NSString* guid = @"";
    if ([listButton.titleLabel.text isEqualToString:@"取消"]||[listButton.titleLabel.text isEqualToString:@"全部"]) {
        guidStr = [showArray[0] objectForKey:@"BOOKGUID"];
        for (NSInteger index = 0; index < showArray.count; index ++) {
            if (index == 0) {
                guidStr = [NSString stringWithFormat:@"%@,",[showArray[index] objectForKey:@"BOOKGUID"]];
            }else if (index == showArray.count-1) {
                guidStr = [NSString stringWithFormat:@"%@,%@",guidStr,[showArray[index] objectForKey:@"BOOKGUID"]];
            }else{
                guidStr = [NSString stringWithFormat:@"%@,%@,",guidStr,[showArray[index] objectForKey:@"BOOKGUID"]];
            }
        }
        guid = guidStr;
    }else if([listButton.titleLabel.text isEqualToString:@"值长"]){
        
        
        
    
    
        for (int  index=0 ; index<showArray.count; index++) {
            if ([[showArray[index] objectForKey:@"MPNAME"] isEqualToString:@"值长"]){
                
                guid=[showArray[index] objectForKey:@"BOOKGUID"];
                [listButton setTitle:@"值长" forState:0];
            }
            
            
            
        }
    
    
    }
    else{
        guid = guidStr;
    }
    
    NSString* type = @"";
    if ([valueButton.titleLabel.text isEqualToString:@"近三天"]) type = @"1";
    if ([valueButton.titleLabel.text isEqualToString:@"近五天"]) type = @"2";
    if ([valueButton.titleLabel.text isEqualToString:@"近十天"]) type = @"3";
    if ([valueButton.titleLabel.text isEqualToString:@"近二十天"]) type = @"4";
    if ([valueButton.titleLabel.text isEqualToString:@"近一个月"]) type = @"5";
//    [dataArray removeAllObjects];
//    dataArray = [[NSMutableArray alloc] init];

    NSDictionary* dict = [NSDictionary dictionaryWithObjectsAndKeys:@"GETDUTYLOGDETAIL",@"Action",@"10",@"Pagesize",@"1",@"Pageindex",type,@"DATETYPE",@"DESC,DESC,ASC,ASC",@"Softtype",@"BEGINTIME,LOGID,LOGTIMEHOUR,LOGTIMEMINUTE",@"Softfield",guid,@"BOOKGUID", nil];
    MyRequest *manager = [MyRequest requestWithURL:[NSString stringWithFormat:@"http://%@/slrd/DM/ProxyMobile/PaginationProxy.ashx",HTTPIP] withParameter:dict];
    
    NSLog(@"dict===3==%@",dict);
    manager.backSuccess = ^void(NSDictionary *dictt)
    {
        [SVProgressHUD dismiss];
        if ([[dictt objectForKey:@"success"] integerValue] == 1) {
            BOOL isAdd = YES;
            [dataEndArray removeAllObjects];
            dataEndArray = [[NSMutableArray alloc] init];
//            dataArray = [NSMutableArray arrayWithArray:[dictt objectForKey:@"data"]];
            [andMutableArray removeAllObjects];
            andMutableArray = [NSMutableArray arrayWithArray:[dictt objectForKey:@"data"]];
            for (NSInteger index = 0; index < andMutableArray.count; index ++) {
                
                NSMutableArray* contensArray = [[NSMutableArray alloc] init];
                NSString* date = [NSString stringWithFormat:@"%@,%@,%@,%@,%@",[andMutableArray[index] objectForKey:@"SHIFTNAME"],[andMutableArray[index] objectForKey:@"MPNAME"],[andMutableArray[index] objectForKey:@"HANDERNAME"],[andMutableArray[index] objectForKey:@"TEAMNAME"],[[andMutableArray[index] objectForKey:@"LOGDATE"] substringWithRange:NSMakeRange(0,10)]];
                [contensArray addObject:andMutableArray[index]];
                
                for (NSInteger j = 0; j < index; j ++) {
                    NSString* dateTwo = [NSString stringWithFormat:@"%@,%@,%@,%@,%@",[andMutableArray[j] objectForKey:@"SHIFTNAME"],[andMutableArray[j] objectForKey:@"MPNAME"],[andMutableArray[j] objectForKey:@"HANDERNAME"],[andMutableArray[j] objectForKey:@"TEAMNAME"],[[andMutableArray[j] objectForKey:@"LOGDATE"] substringWithRange:NSMakeRange(0,10)]];
                    if ([dateTwo isEqualToString:date]) {
                        isAdd = NO;
                    }else if (j==index-1){
                        isAdd = YES;
                        for (NSInteger two = index+1; two < andMutableArray.count; two ++) {
                            if (isAdd) {
                                NSString* dateTwo = [NSString stringWithFormat:@"%@,%@,%@,%@,%@",[andMutableArray[two] objectForKey:@"SHIFTNAME"],[andMutableArray[two] objectForKey:@"MPNAME"],[andMutableArray[two] objectForKey:@"HANDERNAME"],[andMutableArray[two] objectForKey:@"TEAMNAME"],[[andMutableArray[two] objectForKey:@"LOGDATE"] substringWithRange:NSMakeRange(0,10)]];
                                if ([date isEqualToString:dateTwo]) {
                                    [contensArray addObject:andMutableArray[two]];
                                }
                                
                                if (two == andMutableArray.count-1) {
                                    NSMutableDictionary* modelDict = [NSMutableDictionary dictionaryWithObjectsAndKeys:contensArray,@"data", nil];
                                    [dataEndArray addObject:[WorkModel initWithAddData:modelDict]];
                                }
                            }
                        }
                    }
                }
                if (index==0) {
                    for (NSInteger two = index+1; two < andMutableArray.count; two ++) {
                        if (isAdd) {
                            NSString* dateTwo = [NSString stringWithFormat:@"%@,%@,%@,%@,%@",[andMutableArray[two] objectForKey:@"SHIFTNAME"],[andMutableArray[two] objectForKey:@"MPNAME"],[andMutableArray[two] objectForKey:@"HANDERNAME"],[andMutableArray[two] objectForKey:@"TEAMNAME"],[[andMutableArray[two] objectForKey:@"LOGDATE"] substringWithRange:NSMakeRange(0,10)]];
                            if ([date isEqualToString:dateTwo]) {
                                [contensArray addObject:andMutableArray[two]];
                            }
                            
                            if (two == andMutableArray.count-1) {
                                NSMutableDictionary* modelDict = [NSMutableDictionary dictionaryWithObjectsAndKeys:contensArray,@"data", nil];
                                [dataEndArray addObject:[WorkModel initWithAddData:modelDict]];
                            }
                        }
                    }
                }
                
            }
            [contensTableView reloadData];
        }else{
            [SVProgressHUD showErrorWithStatus:[dictt objectForKey:@"errorMsg"]];
        }
    };
}
- (void)requestShowDataRefresh
{
    NSString* guid = @"";
    startIndex = startIndex+1;
    NSString* page = [NSString stringWithFormat:@"%ld",startIndex];
    if ([listButton.titleLabel.text isEqualToString:@"【岗位】"]||[listButton.titleLabel.text isEqualToString:@"全部"]) {
        guidStr = [showArray[0] objectForKey:@"BOOKGUID"];
        for (NSInteger index = 0; index < showArray.count; index ++) {
            if (index == 0) {
                guidStr = [NSString stringWithFormat:@"%@,",[showArray[index] objectForKey:@"BOOKGUID"]];
            }else if (index == showArray.count-1) {
                guidStr = [NSString stringWithFormat:@"%@,%@",guidStr,[showArray[index] objectForKey:@"BOOKGUID"]];
            }else{
                guidStr = [NSString stringWithFormat:@"%@,%@,",guidStr,[showArray[index] objectForKey:@"BOOKGUID"]];
            }
        }
        guid = guidStr;
    }else if ([listButton.titleLabel.text isEqualToString:@"值长"]){
    
        guid = [showArray[1] objectForKey:@"BOOKGUID"];
    }
    else if([listButton.titleLabel.text isEqualToString:@"值长"]){
        
        
        
        
        
        for (int  index=0 ; index<showArray.count; index++) {
            if ([[showArray[index] objectForKey:@"MPNAME"] isEqualToString:@"值长"]){
                
                guid=[showArray[index] objectForKey:@"BOOKGUID"];
                [listButton setTitle:@"值长" forState:0];
            }
            
            
            
        }
        
        
    }

    
    else{
        guid = guidStr;
    }
    
    NSString* type = @"";
    if ([valueButton.titleLabel.text isEqualToString:@"近三天"]) type = @"1";
    if ([valueButton.titleLabel.text isEqualToString:@"近五天"]) type = @"2";
    if ([valueButton.titleLabel.text isEqualToString:@"近十天"]) type = @"3";
    if ([valueButton.titleLabel.text isEqualToString:@"近二十天"]) type = @"4";
    if ([valueButton.titleLabel.text isEqualToString:@"近一个月"]) type = @"5";
//    [dataArray removeAllObjects];
//    dataArray = [[NSMutableArray alloc] init];
    NSLog(@"guid===%@",guid);
    NSDictionary* dict = [NSDictionary dictionaryWithObjectsAndKeys:@"GETDUTYLOGDETAIL",@"Action",@"10",@"Pagesize",page,@"Pageindex",type,@"DATETYPE",@"DESC,DESC,ASC,ASC",@"Softtype",@"BEGINTIME,LOGID,LOGTIMEHOUR,LOGTIMEMINUTE",@"Softfield",guid,@"BOOKGUID", nil];
    MyRequest *manager = [MyRequest requestWithURL:[NSString stringWithFormat:@"http://%@/slrd/DM/ProxyMobile/PaginationProxy.ashx",HTTPIP] withParameter:dict];
    NSLog(@"dict====2%@",dict);
    manager.backSuccess = ^void(NSDictionary *dictt)
    {
        [SVProgressHUD dismiss];
        if ([[dictt objectForKey:@"success"] integerValue] == 1) {
            BOOL isAdd = YES;
            [dataEndArray removeAllObjects];
            dataEndArray = [[NSMutableArray alloc] init];
            NSMutableArray* newArray = [[NSMutableArray alloc] init];
//            NSArray*  = [NSMutableArray arrayWithArray:[dictt objectForKey:@"data"]];
            for (NSInteger index = 0; index < [[dictt objectForKey:@"data"] count]; index ++) {
                [andMutableArray addObject:[dictt objectForKey:@"data"][index]];
            }
            for (NSInteger index = 0; index < andMutableArray.count; index ++) {
                
                NSMutableArray* contensArray = [[NSMutableArray alloc] init];
                NSString* date = [NSString stringWithFormat:@"%@,%@,%@,%@,%@",[andMutableArray[index] objectForKey:@"SHIFTNAME"],[andMutableArray[index] objectForKey:@"MPNAME"],[andMutableArray[index] objectForKey:@"HANDERNAME"],[andMutableArray[index] objectForKey:@"TEAMNAME"],[[andMutableArray[index] objectForKey:@"LOGDATE"] substringWithRange:NSMakeRange(0,10)]];
                [contensArray addObject:andMutableArray[index]];
                
                for (NSInteger j = 0; j < index; j ++) {
                    NSString* dateTwo = [NSString stringWithFormat:@"%@,%@,%@,%@,%@",[andMutableArray[j] objectForKey:@"SHIFTNAME"],[andMutableArray[j] objectForKey:@"MPNAME"],[andMutableArray[j] objectForKey:@"HANDERNAME"],[andMutableArray[j] objectForKey:@"TEAMNAME"],[[andMutableArray[j] objectForKey:@"LOGDATE"] substringWithRange:NSMakeRange(0,10)]];
                    if ([dateTwo isEqualToString:date]) {
                        isAdd = NO;
                    }else if (j==index-1){
                        isAdd = YES;
                        for (NSInteger two = index+1; two < andMutableArray.count; two ++) {
                            if (isAdd) {
                                NSString* dateTwo = [NSString stringWithFormat:@"%@,%@,%@,%@,%@",[andMutableArray[two] objectForKey:@"SHIFTNAME"],[andMutableArray[two] objectForKey:@"MPNAME"],[andMutableArray[two] objectForKey:@"HANDERNAME"],[andMutableArray[two] objectForKey:@"TEAMNAME"],[[andMutableArray[two] objectForKey:@"LOGDATE"] substringWithRange:NSMakeRange(0,10)]];
                                if ([date isEqualToString:dateTwo]) {
                                    [contensArray addObject:andMutableArray[two]];
                                }
                                
                                if (two == andMutableArray.count-1) {
                                    NSMutableDictionary* modelDict = [NSMutableDictionary dictionaryWithObjectsAndKeys:contensArray,@"data", nil];
                                    [newArray addObject:[WorkModel initWithAddData:modelDict]];
                                }
                            }
                        }
                    }
                }
                if (index==0) {
                    for (NSInteger two = index+1; two < andMutableArray.count; two ++) {
                        if (isAdd) {
                            NSString* dateTwo = [NSString stringWithFormat:@"%@,%@,%@,%@,%@",[andMutableArray[two] objectForKey:@"SHIFTNAME"],[andMutableArray[two] objectForKey:@"MPNAME"],[andMutableArray[two] objectForKey:@"HANDERNAME"],[andMutableArray[two] objectForKey:@"TEAMNAME"],[[andMutableArray[two] objectForKey:@"LOGDATE"] substringWithRange:NSMakeRange(0,10)]];
                            if ([date isEqualToString:dateTwo]) {
                                [contensArray addObject:andMutableArray[two]];
                            }
                            
                            if (two == andMutableArray.count-1) {
                                NSMutableDictionary* modelDict = [NSMutableDictionary dictionaryWithObjectsAndKeys:contensArray,@"data", nil];
                                [newArray addObject:[WorkModel initWithAddData:modelDict]];
                            }
                        }
                    }
                }
                
            }
            if (newArray.count < 10) {
                for (NSUInteger i = 0; i < newArray.count; i ++) {
                    [dataEndArray addObject:[newArray objectAtIndex:i]];
                }
                [contensTableView reloadData];
            }else{
                for (NSUInteger i = 0; i < newArray.count; i ++) {
                    [dataEndArray addObject:[newArray objectAtIndex:i]];
                }
                [contensTableView reloadData];
            }
        }else{
            [SVProgressHUD showErrorWithStatus:[dictt objectForKey:@"errorMsg"]];
        }
    };
}
#pragma mark ------ 下拉刷新
- (void)upRefresh:(id)sender
{
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.5 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self searchData];
        [contensTableView headerEndRefreshing];
    });
}
#pragma mark ------ 上拉加载
- (void)downRefresh:(id)sender
{
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.5 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self requestShowDataRefresh];
        [contensTableView footerEndRefreshing];
    });
}
#pragma mark ------- 表代理
- (UIView*)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    WorkModel* model = dataEndArray[section];
    //    区头View
    UIView* sectionView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 30)];
    sectionView.backgroundColor = [UIColor colorWithRed:0.9 green:0.9 blue:0.9 alpha:1];
    UILabel* sectionLable = [[UILabel alloc] initWithFrame:CGRectMake(10, 0, [UIScreen mainScreen].bounds.size.width, 30)];
    sectionLable.textColor = [UIColor colorWithRed:73/255.0 green:73/255.0 blue:73/255.0 alpha:1];
    sectionLable.text = [NSString stringWithFormat:@"%@,%@,%@,%@,%@",[[model.dataArray[0] objectForKey:@"LOGDATE"] substringWithRange:NSMakeRange(0,10)],[model.dataArray[0] objectForKey:@"SHIFTNAME"],[model.dataArray[0] objectForKey:@"TEAMNAME"],[model.dataArray[0] objectForKey:@"HANDERNAME"],[model.dataArray[0] objectForKey:@"MPNAME"]];
    sectionLable.font = [UIFont systemFontOfSize:14];
    sectionLable.backgroundColor = [UIColor clearColor];
    sectionLable.textAlignment = NSTextAlignmentLeft;
    [sectionView addSubview:sectionLable];
    
    UIImageView *fgiv2 = [[UIImageView alloc]initWithFrame:CGRectMake(LWidth-30, 14, 15, 7)];
    fgiv2.tag = section;
    fgiv2.image = [UIImage imageNamed:@"find_down"];
    if (model.isGoru) {
        CGAffineTransform transform= CGAffineTransformMakeRotation(-M_PI/2);
        fgiv2.transform = transform;//旋转
    }
    [sectionView addSubview:fgiv2];
    
    UIButton* btn = [UIButton buttonWithType:UIButtonTypeCustom];
    btn.tag = section;
    btn.frame = CGRectMake(0, 0, LWidth, sectionView.frame.size.height);
    [btn addTarget:self action:@selector(sectionButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    [sectionView addSubview:btn];
    
    if (tableView.tag == 2) {
        return sectionView;
    }else{
        return nil;
    }
}
- (void)sectionButtonClick:(UIButton *)sender
{
    WorkModel* model = dataEndArray[sender.tag];
    model.isGoru = !model.isGoru;
    [contensTableView reloadData];
}
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    if (tableView.tag == 2) {
        return dataEndArray.count;
    }else{
        return 1;
    }
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (tableView.tag == 0) {
        return showArray.count;
    }else if (tableView.tag == 1) {
        return valueArray.count;
    }else{
        WorkModel* model = dataEndArray[section];
        return model.isGoru?model.dataArray.count:0;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView.tag == 2) {
        static NSString *CellIdentifier = @"CellIdentifier";
        WorkContensTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
        if(cell == nil) {
            NSArray *nib = [[NSBundle mainBundle] loadNibNamed:@"WorkContensTableViewCell" owner:nil options:nil];
            for (id oneObject in nib)
            {
                if ([oneObject isKindOfClass:[WorkContensTableViewCell class]])
                {
                    cell = (WorkContensTableViewCell *)oneObject;
                }
            }
        }
        WorkModel* model = dataEndArray[indexPath.section];
        cell.time.text = [NSString stringWithFormat:@"%@:%@",[model.dataArray[indexPath.row] objectForKey:@"LOGTIMEHOUR"],[model.dataArray[indexPath.row] objectForKey:@"LOGTIMEMINUTE"]];
        cell.title.text = [model.dataArray[indexPath.row] objectForKey:@"TOPICNAME"];
        cell.name.text = [model.dataArray[indexPath.row] objectForKey:@"CONTENT"];
        if (indexPath.row == model.dataArray.count-1 & indexPath.section < dataEndArray.count-1) cell.imagbg.hidden = YES;
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        CGSize size = [self sizeWithString:cell.name.text font:cell.name.font];
        cell.name.frame = CGRectMake(70, cell.name.frame.origin.y, cell.name.frame.size.width-70, size.height);
        cell.imagbg.frame = CGRectMake(cell.imagbg.frame.origin.x, cell.name.frame.origin.y+size.height+10, LWidth, 1);
        tableView.rowHeight = cell.contentView.frame.size.height+size.height-20+5;
        return cell;
    }else{
        static NSString *MyIdentifier = @"MyIdentifier";
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:MyIdentifier];
        if (cell == nil) {
            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:MyIdentifier];
        }
        if (tableView.tag == 0) {
            cell.textLabel.text = [showArray[indexPath.row] objectForKey:@"MPNAME"];
            cell.textLabel.font = [UIFont systemFontOfSize:12];
            UIImageView* imag = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"dividing-line"]];
            imag.frame = CGRectMake(0, 29, LWidth, 1);
            [cell.contentView addSubview:imag];
        }else if (tableView.tag == 1) {
            cell.textLabel.text = valueArray[indexPath.row];
            cell.textLabel.font = [UIFont systemFontOfSize:12];
            UIImageView* imag = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"dividing-line"]];
            imag.frame = CGRectMake(0, 29, LWidth, 1);
            [cell.contentView addSubview:imag];
        }
        return cell;
    }
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView.tag == 0) {
        [listButton setTitle:[showArray[indexPath.row] objectForKey:@"MPNAME"] forState:0];
        [listButton setBackgroundColor:[UIColor whiteColor]];
        [listButton setTitleColor:[UIColor blackColor] forState:0];
        guidStr = [showArray[indexPath.row] objectForKey:@"BOOKGUID"];
        listTableView.hidden = YES;
        isList = YES;
    }else if (tableView.tag == 1) {
        [valueButton setTitle:valueArray[indexPath.row] forState:0];
        [valueButton setBackgroundColor:[UIColor whiteColor]];
        [valueButton setTitleColor:[UIColor blackColor] forState:0];
        valueTableView.hidden = YES;
        isValue = YES;
    }
}
- (CGSize)sizeWithString:(NSString *)string font:(UIFont *)font
{
    CGRect rect = [string boundingRectWithSize:CGSizeMake(LWidth-80, LHeight)//限制最大的宽度和高度
                                       options:NSStringDrawingTruncatesLastVisibleLine | NSStringDrawingUsesFontLeading  | NSStringDrawingUsesLineFragmentOrigin//采用换行模式
                                    attributes:@{NSFontAttributeName: font}
                                       context:nil];
    
    return rect.size;
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
