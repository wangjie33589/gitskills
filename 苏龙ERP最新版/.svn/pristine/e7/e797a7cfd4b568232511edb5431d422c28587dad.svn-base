//
//  Home_task_ViewController.m
//  Proxy_ios
//
//  Created by E-Bans on 15/11/13.
//  Copyright © 2015年 keyuan. All rights reserved.
//

#import "Home_task_ViewController.h"
#import "MJRefresh.h"
#import "TaskTableViewCell.h"
#import "Task_Two_ViewController.h"

@interface Home_task_ViewController () <MyRequestDelegate,UITableViewDataSource,UITableViewDelegate,Task_Two_ViewControllerDelegate>
{
    UIView* popView;
    NSMutableArray* showArray;
    NSInteger startIndex;
}
@end

@implementation Home_task_ViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = @"我的事务";
    
    UIBarButtonItem * lefyButton = [[UIBarButtonItem alloc]
                                    initWithTitle:@""
                                    style:UIBarButtonItemStyleDone
                                    target:self
                                    action:@selector(callModalList)];
    
    [lefyButton setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:
                                        [UIFont systemFontOfSize:15], NSFontAttributeName,
                                        [UIColor whiteColor], NSForegroundColorAttributeName,
                                        nil]
                              forState:UIControlStateNormal];
    lefyButton.image = [UIImage imageNamed:@"leftImag"];
    self.navigationItem.leftBarButtonItem = lefyButton;
    
    startIndex = 1;
    taskTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, LWidth, LHeight-64)];
    taskTableView.delegate = self;
    taskTableView.dataSource = self;
    taskTableView.sectionHeaderHeight = 35.0f;
    taskTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [taskTableView setTableFooterView:[[UIView alloc] initWithFrame:CGRectZero]];
    [self.view addSubview:taskTableView];
    [taskTableView addHeaderWithTarget:self action:@selector(upRefresh:)];
    [taskTableView addFooterWithTarget:self action:@selector(downRefresh:)];
    [self requestShowDataList];
}
- (void)callModalList
{
    AppDelegate *aAppDelegate=(AppDelegate *)[[UIApplication sharedApplication] delegate];
    [aAppDelegate.ddMenu showLeftController:YES];
}
#pragma mark ------ 下拉刷新
- (void)upRefresh:(id)sender
{
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.5 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self requestShowDataList];
        [taskTableView headerEndRefreshing];
    });
}
#pragma mark ------ 上拉加载
- (void)downRefresh:(id)sender
{
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.5 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self requestShowDataRefresh];
        [taskTableView footerEndRefreshing];
    });
}
- (void)requestShowDataList
{
    [popView removeFromSuperview];
    [SVProgressHUD showWithStatus:@"努力加载中..."];
    NSDictionary* dict = [NSDictionary dictionaryWithObjectsAndKeys:@"GETHANDLERLIST",@"Action",@"10",@"Pagesize",@"1",@"Pageindex",@"DESC",@"Softtype",@"CREATETIME",@"Softfield",@"1",@"STATUS",@"",@"TITLE", nil];
    MyRequest *manager = [MyRequest requestWithURL:[NSString stringWithFormat:@"http://%@/slrd/WorkFlowWebDesigner/ProxyMobile/PaginationProxy.ashx",HTTPIP] withParameter:dict];
    manager.delegate = self;
    manager.backSuccess = ^void(NSDictionary *dictt)
    {
        if ([[dictt objectForKey:@"success"] integerValue] == 1) {
            showArray = [NSMutableArray arrayWithArray:[dictt objectForKey:@"data"]];
            [taskTableView reloadData];
            [SVProgressHUD dismiss];
        }else{
            [SVProgressHUD showErrorWithStatus:[dictt objectForKey:@"errorMsg"]];
        }
    };
}
- (void)requestShowDataRefresh
{
    startIndex = startIndex+1;
    NSString* pageStr = [NSString stringWithFormat:@"%ld",startIndex];
    NSDictionary* dict = [NSDictionary dictionaryWithObjectsAndKeys:@"GETHANDLERLIST",@"Action",@"10",@"Pagesize",pageStr,@"Pageindex",@"DESC",@"Softtype",@"CREATETIME",@"Softfield",@"1",@"STATUS",@"",@"TITLE", nil];
    MyRequest *manager = [MyRequest requestWithURL:[NSString stringWithFormat:@"http://%@/slrd/WorkFlowWebDesigner/ProxyMobile/PaginationProxy.ashx",HTTPIP] withParameter:dict];
    manager.backSuccess = ^void(NSDictionary *dictt)
    {
        if ([[dictt objectForKey:@"success"] integerValue] == 1) {
            NSMutableArray* array = [dictt objectForKey:@"data"];
            if (array.count < 10) {
                [SVProgressHUD showSuccessWithStatus:@"加载到底了"];
                for (NSUInteger i = 0; i < array.count; i ++) {
                    [showArray addObject:[array objectAtIndex:i]];
                }
                [taskTableView reloadData];
            }else{
                for (NSUInteger i = 0; i < array.count; i ++) {
                    [showArray addObject:[array objectAtIndex:i]];
                }
                [taskTableView reloadData];
            }
        }else{
            [SVProgressHUD showErrorWithStatus:[dictt objectForKey:@"errorMsg"]];
        }
    };
}
#pragma mark ------------------------- 网络环境不可用时的页面
- (void)RequestErrorViewController
{
    [SVProgressHUD dismiss];
    popView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, LWidth, LHeight)];
    popView.backgroundColor = [UIColor colorWithRed:0.949 green:0.949 blue:0.949 alpha:1];
    UIImageView* imag = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 150, 160)];
    imag.center = popView.center;
    imag.image = [UIImage imageNamed:@"02e9868d724dae529e06525edbaf024e.png"];
    [popView addSubview:imag];
    [self.view addSubview:popView];
    UITapGestureRecognizer* regiontapGestureT = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(requestShowDataList)];
    [popView addGestureRecognizer:regiontapGestureT];
}
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return showArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CellIdentifier = @"CellIdentifier";
    TaskTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if(cell == nil) {
        NSArray *nib = [[NSBundle mainBundle] loadNibNamed:@"TaskTableViewCell" owner:nil options:nil];
        for (id oneObject in nib)
        {
            if ([oneObject isKindOfClass:[TaskTableViewCell class]])
            {
                cell = (TaskTableViewCell *)oneObject;
            }
        }
    }
    cell.title.text = [NSString stringWithFormat:@"【%@】%@",[showArray[indexPath.row] objectForKey:@"INTID"],[showArray[indexPath.row] objectForKey:@"TITLE"]];
    cell.nameTime.text = [NSString stringWithFormat:@"%@   %@",[showArray[indexPath.row] objectForKey:@"LASTPERSON"],[[[showArray[indexPath.row] objectForKey:@"CREATETIME"] substringWithRange:NSMakeRange(0,19)] stringByReplacingOccurrencesOfString:@"T" withString:@" "]];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    CGSize size = [self sizeWithString:cell.title.text font:cell.title.font];
    cell.title.frame = CGRectMake(16, 10, LWidth-32, size.height);
    cell.nameTime.frame = CGRectMake(22, cell.title.frame.origin.y+size.height+3, LWidth-44, 12);
    tableView.rowHeight = size.height+34;
    return cell;
}
- (CGSize)sizeWithString:(NSString *)string font:(UIFont *)font
{
    CGRect rect = [string boundingRectWithSize:CGSizeMake(LWidth-32, LHeight)//限制最大的宽度和高度
                                       options:NSStringDrawingTruncatesLastVisibleLine | NSStringDrawingUsesFontLeading  | NSStringDrawingUsesLineFragmentOrigin//采用换行模式
                                    attributes:@{NSFontAttributeName: font}
                                       context:nil];
    return rect.size;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    Task_Two_ViewController* vc = [[Task_Two_ViewController alloc] initWithData:showArray[indexPath.row]];
    vc.delegate = self;
    vc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vc animated:YES];
}
- (void)pushHome_Task_ViewController
{
    [self requestShowDataList];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
@end
